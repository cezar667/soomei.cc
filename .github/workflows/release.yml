name: Release & Deploy

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: prod-deploy
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: release
    runs-on: ubuntu-latest
    env:
      PROD_PATH: ${{ secrets.PROD_PATH || '/opt/soomei' }}
      REPO_URL: https://github.com/cezar667/soomei.cc.git
    steps:
      - name: Deploy by git checkout on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          password: ${{ secrets.PROD_PASSWORD }}
          port: 22
          script: |
            set -euo pipefail
            TAG='${{ github.ref_name }}'                  # ex: v1.0.0
            DIR='${{ env.PROD_PATH }}'
            REPO='${{ env.REPO_URL }}'

            command -v git >/dev/null 2>&1 || (apt-get update && apt-get install -y git)

            mkdir -p "$DIR"
            cd "$DIR"

            if [ ! -d .git ]; then
              git init
              git remote add origin "$REPO" || git remote set-url origin "$REPO"
            fi

            # Buscar tudo (inclui tags)
            git fetch --tags --force origin

            # Checkout exato da tag
            git checkout -f "$TAG" 2>/dev/null || git checkout -f "tags/$TAG"

            # Garantir working tree igual à tag
            git reset --hard

            # (Opcional) rodar build/instalações aqui, se necessário:
            # pip install -r requirements.txt
            # npm ci && npm run build

            systemctl restart soomei
            systemctl is-active --quiet soomei && echo "soomei ativo."
            journalctl -u soomei -n 50 --no-pager || true
